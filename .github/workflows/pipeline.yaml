on: [push, pull_request]
      
defaults:
  run:
    shell: bash
    
jobs:
  detect:
    name: Detect language folders
    runs-on: ubuntu-latest
    outputs:
      has_go: ${{ steps.out.outputs.has_go }}
      has_py: ${{ steps.out.outputs.has_py }}
      has_node: ${{ steps.out.outputs.has_node }}
    steps:
      - uses: actions/checkout@v4
      - id: out
        run: |
          has_go=false
          [[ -d templates/go && $(find templates/go -type f -name "*.go" | wc -l) -gt 0 ]] && has_go=true
          has_py=false
          [[ -d templates/python && $(find templates/python -type f -name "*.py" | wc -l) -gt 0 ]] && has_py=true
          has_node=false
          [[ -d templates/node && $(find templates/node -type f -name "*.js" | wc -l) -gt 0 ]] && has_node=true

          echo "has_go=$has_go"     >> "$GITHUB_OUTPUT"
          echo "has_py=$has_py"     >> "$GITHUB_OUTPUT"
          echo "has_node=$has_node" >> "$GITHUB_OUTPUT"

  build_and_test:
    name: Build and test
    needs: detect
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---- Go ----
      - name: Setup Go
        if: needs.detect.outputs.has_go == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Go build and test
        if: needs.detect.outputs.has_go == 'true'
        working-directory: templates/go
        run: |
          go test ./...
          go build ./...
          
      # ---- Python ----
      - name: Setup Python
        if: needs.detect.outputs.has_py == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: templates/python/requirements.txt

      - name: Python deps and tests
        if: needs.detect.outputs.has_py == 'true'
        working-directory: templates/python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest -q

      # ---- Node.js ----
      - name: Setup Node.js
        if: needs.detect.outputs.has_node == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: templates/node/package-lock.json

      - name: Node install and tests
        if: needs.detect.outputs.has_node == 'true'
        working-directory: templates/node
        run: |
          npm ci
          npm test --silent

